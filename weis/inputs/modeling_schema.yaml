$schema: 'http://json-schema.org/draft-07/schema#'
$id: WEIS_model_options_schema_v00
title: WEIS wind turbine modeling options schema
description: Schema that describes the modeling options for WEIS
type: object
properties:
    General:
        type: object
        default: {}
        properties:
            verbosity:
                type: boolean
                default: False
                description: Prints additional outputs to screen (and to a file log in the future)
            solver_maxiter:
                type: integer
                default: 5
                description: Number of iterations for the top-level coupling solver
            openfast_configuration:
                type: object
                default: {}
                properties:
                    OF_run_fst:
                        type: string
                        default: none
                        description: Filename prefix for output files
                    OF_run_dir:
                        type: string
                        default: none
                        description: Path to place FAST output files (e.g. /home/user/myturbines/output)
                    generate_af_coords:
                        type: boolean
                        default: False
                        description: Flag to write airfoil coordinates out or not
                    use_exe:
                        type: boolean
                        default: False
                        description: Use openfast executable instead of library
                    model_only:
                        type: boolean
                        default: False
                        description: Flag to only generate an OpenFAST model and stop
                    save_timeseries:
                        type: boolean
                        default: True
                        description: Save openfast output timeseries
                    keep_time:
                        type: boolean
                        default: True
                        description: Keep timeseries in openmdao_openfast for post-processing
                    save_iterations:
                        type: boolean
                        default: True
                        description: Save summary stats and other info for each openfast iteration.  Could bump this up to a more global post-processing input.
                    FAST_exe:
                        type: string
                        default: none
                        description: Path to FAST executable to override default WEIS value (e.g. /home/user/OpenFAST/bin/openfast).  Note that if you use this, ROSCO must use the same compilation configuration.  You can specify the ROSCO dll with path2dll.
                    FAST_lib:
                        type: string
                        default: none
                        description: Path to FAST dynamic library to override default WEIS value (e.g. /home/user/OpenFAST/lib/libopenfast.so)
                    turbsim_exe:
                        type: string
                        default: none
                        description: Path to turbsim executable to override default WEIS value (e.g. /home/user/OpenFAST/bin/turbsim)
                    path2dll:
                        type: string
                        default: none
                        description: Path to controller shared library (e.g. /home/user/myturbines/libdiscon.so)
                    allow_fails:
                        type: boolean
                        default: False
                        description: Allow WEIS to continue if OpenFAST fails?  All outputs will be filled with fail_value. Use with caution!
                    fail_value:
                        type: number
                        default: -9999
                        decription: All OpenFAST outputs will be filled with this if the simulation fails. 
                    write_stdout:
                        type: boolean
                        default: False
                        description: Write standard output to own file.  Output will not print to screen.
                    nFD:
                        type: integer
                        default: 1
                        description: Number of parallel finite differencing performed by OpenMDAO. WEIS sets this number once the preMPI keyword argument is set
                    nOFp:
                        type: integer
                        default: 1
                        description: Number of parallel OpenFAST runs performed by OpenMDAO. WEIS sets this number once the preMPI keyword argument is set
            goodman_correction:
                type: boolean
                default: False
                description: Flag whether to apply the Goodman correction for mean stress value to the stress amplitude value in fatigue calculations
            test_mode:
                type: boolean
                default: False
                description: Flag for using streamlined models in the WEIS simulation.
    WISDEM:
        type: object
        default: {}
        description: Options for running WISDEM.  No further options are included in this file.  They are populated using the modeling schema in the WISDEM project in python.
    RAFT: &raft_modopt
        type: object
        default: {}
        description: Options for WEIS fidelity level 1 = frequency domain (RAFT)
        properties:
            flag:
                type: boolean
                default: False
                description: Whether or not to run WEIS fidelity level 1 = frequency domain (RAFT)
            min_freq:
                type: number
                description: Minimum frequency to evaluate (frequencies will be min_freq:min_freq:max_freq)
                default: 0.0159
                minimum: 0.0
                maximum: 1e3
                units: Hz
            max_freq:
                type: number
                description: Maximum frequency to evaluate (frequencies will be min_freq:min_freq:max_freq)
                default: 0.3183
                minimum: 0.0
                maximum: 1e3
                units: Hz
            potential_bem_members:
                type: array
                description: List of submerged member names to model with potential flow boundary element methods.  Members not listed here will be modeled with strip theory
                default: []
                items:
                    type: string
                    uniqueItems: True
            potential_model_override:
                type: integer
                default: 0
                enum: [0, 1, 2]
                description: User override for potential boundary element modeling. 0 = uses the potential_bem_members list for inviscid force and computes viscous drag with strip theory (members not listed use only strip theory), 1 = no potential BEM modeling for any member (just strip theory), 2 = potential BEM modeling for all members (no strip theory)
            xi_start:
                type: number
                default: 0.0
                minimum: 0.0
                maximum: 1000.0
                description: Initial amplitude of each DOF for all frequencies
            nIter:
                type: integer
                default: 15
                minimum: 1
                maximum: 100
                description: Number of iterations to solve dynamics
            dls_max:
                type: integer
                default: 5
                minimum: 1
                maximum: 100
                description: Maximum node splitting section amount
            min_freq_BEM:
                type: number
                default: 0.0159
                minimum: 0.0
                maximum: 2.0
                description: lowest frequency and frequency interval to use in BEM analysis
                units: Hz
            trim_ballast:
                type: integer
                default: 0
                description: Use RAFT to trim ballast so that average heave is near 0 (0 - no trim, 1 - adjust compartment fill values, 2 - adjust ballast density, recommended for now)
            heave_tol:
                type: number
                default: 1
                minimum: 0
                description: Heave tolerance for trim_ballast
                units: m
            save_designs:
                type: boolean
                default: False
                description: Save RAFT design iterations in <outputs>/raft_designs
            plot_designs:
                type: boolean
                default: False
                description: Plot RAFT design iterations in <outputs>/raft_designs
            runPyHAMS:
                type: boolean
                default: True
                description: Flag to run pyHAMS
            use_props_in_openfast:
                type: boolean
                default: False
                description: Use RAFT-computed properties as OpenFAST inputs, including platform mass, intertia, CoM, displacement
    OpenFAST: &of_modopt
        type: object
        default: {}
        description: Options for running OpenFAST.  No further options are included in this file.  They are populated using the openfast schema.
    OpenFAST_Linear: &of_linear_modopt
        type: object
        default: {}
        description: Options for WEIS fidelity level 2 = linearized time domain (OpenFAST)
        properties:
            flag:
                type: boolean
                default: False
                description: Whether or not to run WEIS fidelity level 2 = linearized OpenFAST
            simulation: # this may be shared with OpenFAST IEC load cases in the future
                type: object
                default: {}
                properties:
                    flag:
                        type: boolean
                        default: False
                        description: Whether or not to run a level 2 time domain simulation
                    TMax: &TMax
                        type: number
                        default: 720.0
                        minimum: 0.0
                        maximum: 100000.0
                        unit: s
                        description: Total run time (s)
            linearization:      # Some of these options were in Level 3, but we wouldn't set them if running a Level 2 simulation
                type: object
                default: {}
                properties:
                    TMax: *TMax         # note that linearization could run for a different TMax than simulation
                    DT:
                        type: number
                        default: 0.025
                        minimum: 0.0
                        maximum: 10.0
                        unit: s
                        description: Integration time step (s)
                    wind_speeds:
                        type: array
                        description: List of wind speeds at which to linearize (m/s)
                        default: [14.0, 16.0, 18.0]
                        items:
                            type: number
                            uniqueItems: True
                            minimum: 0.0
                            maximum: 200.0
                    rated_offset:
                        type: number
                        default: 1
                        minimum: 0.0
                        maximum: 10.0
                        unit: m/s
                        description: Amount to increase rated wind speed from cc-blade to openfast with DOFs enabled.  In general, the more DOFs, the greater this value.
                    DOFs:
                        type: array
                        description: List of degrees-of-freedom to linearize about
                        default: ['GenDOF','TwFADOF1']
                        items:
                            type: string
                            enum: ['FlapDOF1','FlapDOF2','EdgeDOF','TeetDOF','DrTrDOF','GenDOF','YawDOF','TwFADOF1','TwFADOF2','TwSSDOF1','TwSSDOF2','PtfmSgDOF','PtfmSwDOF','PtfmHvDOF','PtfmRDOF','PtfmPDOF','PtfmYDOF']
                    # DZ: I would assume Linearize = True if we were running Level 2 WEIS
                    # Linearize:
                    #     type: boolean
                    #     default: False
                    #     description: Linearization analysis (flag)
                    # DZ: For now, only CalcSteady = True is supported
                    # CalcSteady:
                    #     type: boolean
                    #     default: False
                    #     description: Calculate a steady-state periodic operating point before linearization? [unused if Linearize=False] (flag)
                    # DZ: For now, we determine TrimCase this automatically based on whether wind_speeds > v_rated
                    # TrimCase:
                    #     type: string
                    #     enum: ['1','2','3', yaw, Yaw, YAW, torque, Torque, TORQUE, pitch, Pitch, PITCH]
                    #     default: '3'
                    #     description: Controller parameter to be trimmed {1:yaw; 2:torque; 3:pitch} [used only if CalcSteady=True] (-)
                    TrimTol:
                        type: number
                        default: 1.e-5
                        minimum: 0.0
                        maximum: 1.0
                        unit: none
                        description: Tolerance for the rotational speed convergence [used only if CalcSteady=True] (-)
                    TrimGain:
                        type: number
                        default: 1.e-4
                        minimum: 0.0
                        maximum: 1.0
                        unit: rad/(rad/s)
                        description: Proportional gain for the rotational speed error (>0) [used only if CalcSteady=True] (rad/(rad/s) for yaw or pitch; Nm/(rad/s) for torque)
                    Twr_Kdmp:
                        type: number
                        default: 0.0
                        minimum: 0.0
                        maximum: 1e5
                        unit: kg/s
                        description: Damping factor for the tower [used only if CalcSteady=True] (N/(m/s))
                    Bld_Kdmp:
                        type: number
                        default: 0.0
                        minimum: 0.0
                        maximum: 1e5
                        unit: kg/s
                        description: Damping factor for the blades [used only if CalcSteady=True] (N/(m/s))
                    NLinTimes:
                        type: integer
                        default: 12
                        minimum: 0
                        maximum: 120
                        description: Number of times to linearize (-) [>=1] [unused if Linearize=False]
                    LinTimes:
                        type: array
                        description: List of times at which to linearize (s) [1 to NLinTimes] [used only when Linearize=True and CalcSteady=False]
                        default: [30.0, 60.0]
                        items:
                            type: number
                            uniqueItems: True
                            minimum: 0.0
                            maximum: 1e4
                    # DZ: I don't know if we should support these initially:
                    # LinInputs:
                    #     type: string
                    #     enum: ['0','1','2', none, None, NONE, standard, Standard, STANDARD, all, All, ALL]
                    #     default: '1'
                    #     description: Inputs included in linearization (switch) {0=none; 1=standard; 2=all module inputs (debug)} [unused if Linearize=False]
                    # LinOutputs:
                    #     type: string
                    #     enum: ['0','1','2', none, None, NONE, standard, Standard, STANDARD, all, All, ALL]
                    #     default: '1'
                    #     description: Outputs included in linearization (switch) {0=none; 1=from OutList(s); 2=all module outputs (debug)} [unused if Linearize=False]
                    # LinOutJac:
                    #     type: boolean
                    #     default: False
                    #     description: Include full Jacobians in linearization output (for debug) (flag) [unused if Linearize=False; used only if LinInputs=LinOutputs=2]
                    # LinOutMod:
                    #     type: boolean
                    #     default: False
                    #     description: Write module-level linearization output files in addition to output for full system? (flag) [unused if Linearize=False]
            DTQP: # this may be shared with OpenFAST IEC load cases in the future
                type: object
                default: {}
                properties:
                    flag:
                        type: boolean
                        default: False
                        description: Whether or not to run a DTQP optimization at level 2
                    nt:
                        type: number
                        default: 1000
                        description: Number of timesteps in DTQP timeseries optimization
                    maxiters:
                        type: number
                        default: 150000
                        description: Maximum number of DTQP optimization iterations
                    tolerance:
                        type: number
                        default: 1.E-4
                        description: Tolerance of DTQP optimization
                    function:
                        type: string
                        enum: ['osqp','ipopt']
                        default: 'osqp'
                        description: Solver used for DTQP optimization

            #InflowWind: *ofinflowwind
            #AeroDyn: *ofaerodyn
            #ElastoDyn: *ofelastodyn
            #ElastoDynBlade: *ofelastodynblade
            #ElastoDynTower: *ofelastodyntower
            #BeamDyn: *ofbeamdyn
            #HydroDyn: *ofhydrodyn
            #SubDyn: *ofsubdyn
            #MoorDyn: *ofmoordyn
            #ServoDyn: *ofservodyn
            #outlist: *ofoutlist
    # Add pointers to new Level 1,2,3 for backwards compatibility
    Level1: *raft_modopt
    Level2: *of_linear_modopt
    Level3: *of_modopt
    DLC_driver:
        type: object
        default: {}
        properties:
            DLCs:
                type: array
                default: [{}]
                items:
                    type: object
                    properties:
                        DLC:
                            type: string
                            default: '1.1'
                            enum: ['1.1', '1.2', '1.3', '1.4', '1.5', '1.6', '2.1', '2.3', '3.1', '3.2', '3.3', '5.1', '6.1', '6.2', '6.3', '6.4', '6.5', '7.1', '7.2', '12.1', 'Custom','AEP','freedecay']
                            description: IEC design load case to run. The DLCs currently supported are 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 5.1, 6.1, 6.3, and 6.4
                        wind_speed:
                            type: array
                            description: Wind speeds for this DLC. If these are defined, ws_bin_size is neglected.
                            default: []
                            items:
                                type: number
                                unit: m/s
                                minItems: 1
                                minimum: 0.0
                                maximum: 200.0
                                uniqueItems: true
                        inflowWind:
                            type: boolean
                            default: false
                            descrption: Flag to the AC or DMS models to use constant inflow or to read the specified windINPfilename
                        WindType:
                            type: integer
                            default: 1
                            description: Inflow wind wind type (1 2 3), this is automatically handled by the DLC processor when it is used
                        ws_bin_size:
                            type: number
                            default: 2
                            minimum: 0.01
                            maximum: 20.0
                            unit: m/s
                            description: Size of the wind speed bin between cut in and cout out wind speeds. It usually can be set to 2 m/s. This entry is neglected if the wind speeds are specified by the user.
                        n_seeds:
                            type: integer
                            default: 1
                            minimum: 1
                            maximum: 100
                            description: Number of turbulent wind seeds drawn from the numpy random integer generator. This entry is neglected if the entry wind_seed is defined.  If DLC 1.4, number of waves seeds.
                        n_azimuth:
                            type: integer
                            default: 1
                            minimum: 1
                            maximum: 100
                            description: Number of azimuth initial conditions to use (primarily during DLC 5.1)
                        wind_seed:
                            type: array
                            default: []
                            description: Array of turbulent wind seeds for TurbSim. If these are defined, n_seeds is neglected.
                            items:
                                type: integer
                                unit: none
                                minItems: 1
                                uniqueItems: true
                        wave_seed:
                            type: array
                            default: []
                            description: Wave random number generator seeds for HydroDyn
                            items:
                                type: integer
                                unit: none
                                minItems: 1
                                uniqueItems: true
                        wind_heading:
                            type: array
                            description: Wind direction from north. This array must currently have either length=1, i.e. one constant value, or the same length of the array wind_speed.
                            default: [0.]
                            items:
                                type: number
                                unit: deg
                                minItems: 1
                                minimum: -180.0
                                maximum: 180.0
                        yaw_misalign:
                            type: array
                            description: Alignment of the nacelle with respect to north. This array must currently have either length=1, i.e. one constant value, or the same length of the array wind_speed. Default depends on DLC, specified in dlc_generator.
                            items:
                                type: number
                                unit: deg
                                minItems: 1
                                minimum: -180.0
                                maximum: 180.0
                        wave_spectrum:
                            type: array
                            description: Spectrum of the waves. This array must currently have either length=1, i.e. one constant spectrum, or the same length of the array wind_speed
                            #default: ["JONSWAP"]
                            items:
                                type: str
                                enum: ["JONSWAP","unit"]
                                minItems: 1
                        turbine_status:
                            type: string
                            description: Status of the turbine, it can be either operating, parked-idling, or parked-still. Each DLC come with its default turbine status specified by the standards.
                            default: operating
                            enum: ['operating','parked-idling','parked-still']
                        constrained_wave:
                            type: boolean
                            description: Use ConstWaveMod in this DLC
                            default: false
                        wave_period:
                            type: array
                            description: Period between waves. If this array is populated by the user, then the field metocean_conditions is neglected. If wave_period is not defined, metocean_conditions will be used, either in the values provided by the user or with its default values (the first option is highly recommended).
                            default: []
                            items:
                                type: number
                                unit: s
                                minItems: 1
                                minimum: 0.0
                                maximum: 1000.0
                        wave_height:
                            type: array
                            description: Height of the waves. If this array is populated by the user, then the field metocean_conditions is neglected. If wave_height is not defined, metocean_conditions will be used, either in the values provided by the user or with its default values (the first option is highly recommended).
                            default: []
                            items:
                                type: number
                                unit: m
                                minItems: 1
                                minimum: 0.0
                                maximum: 100.0
                        current_speed:
                            type: array
                            description: Water current. If this array is populated by the user, then the field metocean_conditions is neglected. If wave_height is not defined, metocean_conditions will be used, either in the values provided by the user or with its default values (the first option is highly recommended).
                            default: []
                            items:
                                type: number
                                unit: m/s
                                minItems: 1
                                minimum: 0.0
                                maximum: 100.0
                        current_std:
                            type: array
                            description: Standard deviation of water current speed. Versus current_speed for MHK. If this array is populated by the user, then the field metocean_conditions is neglected. If wave_height is not defined, metocean_conditions will be used, either in the values provided by the user or with its default values (the first option is highly recommended).
                            default: []
                            items:
                                type: number
                                unit: m/s
                                minItems: 1
                                minimum: 0.0
                                maximum: 100.0
                        wave_heading:
                            type: array
                            description: Heading of the waves with respect to north. This array must currently have either length=1, i.e. one constant value, or the same length of the array wind_speed
                            default: []
                            items:
                                type: number
                                unit: deg
                                minItems: 1
                                minimum: -180.0
                                maximum: 180.0
                        wave_gamma:
                            type: array
                            description: Peak-shape parameter of incident wave spectrum. If 0, the default from IEC61400-3 / HydroDyn is used. This array must currently have either length=1, i.e. one constant value, or the same length of the array wind_speed
                            default: [0.]
                            items:
                                type: number
                                minItems: 1
                                minimum: 0.0
                                maximum: 10.0
                        probabilities:
                            type: array
                            description: Probability of occurrance for each case. This entry is relevant only for DLC 1.2 and 6.4. This array must currently have either length=1, i.e. one constant value, or the same length of the array wind_speed.
                            default: [1.]
                            items:
                                type: number
                                minItems: 1
                                minimum: 0.
                                maximum: 1.
                        IEC_WindType:
                            type: string
                            default: NTM
                            enum: ['NTM', '1ETM', '2ETM', '3ETM', '1EWM1', '2EWM1', '3EWM1', '1EWM50', '2EWM50', '3EWM50', 'ECD', 'EDC', 'EOG','EWS','Custom']
                            description: IEC turbulence type ('NTM'=normal, 'xETM'=extreme turbulence, 'xEWM1'=extreme 1-year wind, 'xEWM50'=extreme 50-year wind, where x=wind turbine class 1, 2, or 3), 'ECD'=extreme coherent gust with direction change, 'EDC'=extreme direction change, 'EOG'=extreme operating gust. Normally the user does not need to define this entry, 'EWS'='extreme wind shear'
                        analysis_time:
                            type: number
                            unit: s
                            minimum: 0.0
                            maximum: 1.e+4
                            default: 0.
                            description: This is the length of the simulation where outputs will be recorded. Its default is 600 seconds (10 minutes) for most simulations, except for the coherent cases where a shorter time window of 200 s is used.
                        transient_time:
                            type: number
                            unit: s
                            minimum: 0.0
                            maximum: 1.e+4
                            default: 120.
                            description: This is the length of the simulation where outputs will be discarded. Its default is 120 seconds (2 minutes) for all simulations. The total simulation time is the sum of analysis_time and transient_time
                        shutdown_time:
                            type: number
                            unit: s
                            minimum: 0.0
                            maximum: 1.e+5
                            default: 9999
                            description: Time when shutdown occurs in DLC 5.1
                        wind_file:
                            type: string
                            description: File path of custom wind file
                        TI_factor: 
                            type: number
                            unit: Percentage
                            description: The fraction of the TI, relative to the class defined in the geometry options or by turbulence_class
                        turbulence_class: 
                            type: string
                            enum: ['A+','A','B','C']
                            description: The class of turbulence, will overwrite class defined in geometry options. Only valid in the AEP DLC.
                        user_group:
                            type: [object,array]
                            items:
                                type: object
                                description: Groups
                            default: {}
                            description: Define additional groups to alter DLCs or sweep additional paramters.  Users can input single values to change all of the simulations in a DLC, multiple values to add an additional group to sweep over, or a list of new groups in the yaml format.
                        turbsim_inputs:
                            type: object
                            default: {}
                            description: These are all inputs to TurbSim. These inputs usually do not need to be set unless you are trying to customize a DLC
                            properties:
                                flag:
                                    type: boolean
                                    default: False
                                    description: Flag switching between steady wind and turbulent wind grid from TurbSim.
                                Echo: &echo
                                    type: boolean
                                    default: False
                                    description: Echo input data to <RootName>.ech (flag)
                                RandSeed1:
                                    type: integer
                                    default: 1
                                    description: First random seed  (-2147483648 to 2147483647)
                                RandSeed2:
                                    default: RANLUX
                                    description: Second random seed  (-2147483648 to 2147483647)
                                WrBHHTP:
                                    type: boolean
                                    default: False
                                    description: Output hub-height turbulence parameters in binary form?  (Generates RootName.bin)
                                WrFHHTP:
                                    type: boolean
                                    default: False
                                    description: Output hub-height turbulence parameters in formatted form?  (Generates RootName.dat)
                                WrADHH:
                                    type: boolean
                                    default: False
                                    description: Output hub-height time-series data in AeroDyn form?  (Generates RootName.hh)
                                WrADFF:
                                    type: boolean
                                    default: True
                                    description: Output full-field time-series data in TurbSim/AeroDyn form? (Generates RootName.bts)
                                WrBLFF:
                                    type: boolean
                                    default: False
                                    description: Output full-field time-series data in BLADED/AeroDyn form?  (Generates RootName.wnd)
                                WrADTWR:
                                    type: boolean
                                    default: False
                                    description: Output tower time-series data? (Generates RootName.twr)
                                WrFMTFF:
                                    type: boolean
                                    default: False
                                    description: Output full-field time-series data in formatted (readable) form?  (Generates RootName.u, RootName.v, RootName.w)
                                WrACT:
                                    type: boolean
                                    default: False
                                    description: Output coherent turbulence time steps in AeroDyn form? (Generates RootName.cts)
                                Clockwise:
                                    type: boolean
                                    default: False
                                    description: Clockwise rotation looking downwind? (used only for full-field binary files - not necessary for AeroDyn)
                                ScaleIEC:
                                    type: integer
                                    enum: [0, 1, 2]
                                    default: 0
                                    description: Scale IEC turbulence models to exact target standard deviation? [0=no additional scaling; 1=use hub scale uniformly; 2=use individual scales]
                                NumGrid_Z:
                                    type: integer
                                    default: 25
                                    minimum: 5
                                    maximum: 100
                                    description: Vertical grid-point matrix dimension
                                NumGrid_Y:
                                    type: integer
                                    default: 25
                                    minimum: 5
                                    maximum: 100
                                    description: Horizontal grid-point matrix dimension
                                TimeStep:
                                    type: number
                                    default: 0.05
                                    minimum: 1.e-4
                                    maximum: 1.
                                    unit: s
                                    description: Time step [seconds]
                                UsableTime:
                                    type: string
                                    default: 'ALL'
                                    description: Usable length of output time series [seconds] (program will add GridWidth/MeanHHWS seconds unless UsableTime is 'ALL')
                                HubHt:
                                    type: number
                                    default: 0
                                    minimum: 0
                                    maximum: 5.e+2
                                    unit: m
                                    description: Hub height [m] (should be > 0.5*GridHeight)
                                GridHeight:
                                    type: number
                                    default: 0
                                    minimum: 0
                                    maximum: 5.e+2
                                    unit: m
                                    description: Grid height [m]
                                GridWidth:
                                    type: number
                                    default: 0
                                    minimum: 0
                                    maximum: 5.e+2
                                    unit: m
                                    description: Grid width [m] (should be >= 2*(RotorRadius+ShaftLength))
                                VFlowAng:
                                    type: number
                                    default: 0.
                                    minimum: -9.e+1
                                    maximum: 9.e+1
                                    unit: deg
                                    description: Vertical mean flow (uptilt) angle [degrees]
                                HFlowAng:
                                    type: number
                                    default: 0.
                                    minimum: -9.e+1
                                    maximum: 9.e+1
                                    unit: deg
                                    description: Horizontal mean flow (skew) angle [degrees]
                                TurbModel:
                                    type: string
                                    enum: ['IECKAI','IECVKM','GP_LLJ','NWTCUP','SMOOTH','WF_UPW','WF_07D','WF_14D','TIDAL','API','USRINP','TIMESR','NONE']
                                    default: IECKAI
                                    description: Turbulence model
                                UserFile:
                                    type: string
                                    default: unused
                                    description: Name of the file that contains inputs for user-defined spectra or time series inputs (used only for "USRINP" and "TIMESR" models)
                                IECstandard:
                                    type: string
                                    default: 1-ED3
                                    enum: ['1-ED3', '1-ED2']
                                    description: Number of IEC 61400-x standard (x=1,2, or 3 with optional 61400-1 edition number (i.e. "1-Ed2") )
                                ETMc:
                                    type: string
                                    default: default
                                    description: IEC Extreme Turbulence Model
                                WindProfileType:
                                    type: string
                                    enum: ['LOG','PL','JET','H2L','API','USR','TS','IEC', 'LOG','default']
                                    default: PL
                                    description: Velocity profile type ('LOG';'PL'=power law;'JET';'H2L'=Log law for TIDAL model;'API';'USR';'TS';'IEC'=PL on rotor disk, LOG elsewhere; or 'default')
                                ProfileFile:
                                    type: string
                                    default: unused
                                    description: Name of the file that contains input profiles for WindProfileType='USR' and/or TurbModel='USRVKM' [-]
                                RefHt:
                                    type: number
                                    default: 0
                                    minimum: 0
                                    maximum: 1.e+5
                                    unit: m
                                    description: Height of the reference velocity (URef) [m]
                                URef:
                                    type: number
                                    unit: m/s
                                    default: -1
                                    description: URef is an input to TurbSim, but it's not honored in WEIS.  Please use the wind_speed input to each DLC instead.
                                IECturbc:
                                    type: number
                                    unit: '(-)'
                                    default: -1
                                    description: Turbulence intensity (fraction) for custom DLCs, if default (-1), the class letter will be used
                                ZJetMax:
                                    type: string
                                    default: default
                                    description: Jet height [m] (used only for JET velocity profile, valid 70-490 m)
                                PLExp:
                                    type: number
                                    default: -1
                                    description: Power law exponent [-] (or 'default'), if default (-1), the environment option shear_exp will be used for all DLCs
                                Z0:
                                    type: string
                                    default: default
                                    description: Surface roughness length [m] (or 'default')
                                Latitude:
                                    type: string
                                    default: default
                                    description: Site latitude [degrees] (or 'default')
                                RICH_NO:
                                    type: number
                                    default: 0.05
                                    description: Gradient Richardson number [-]
                                UStar:
                                    type: string
                                    default: default
                                    description: Friction or shear velocity [m/s] (or 'default')
                                ZI:
                                    type: string
                                    default: default
                                    description: Mixing layer depth [m] (or 'default')
                                PC_UW:
                                    type: string
                                    default: default
                                    description: Hub mean uw Reynolds stress [m^2/s^2] (or 'default' or 'none')
                                PC_UV:
                                    type: string
                                    default: default
                                    description: Hub mean uv Reynolds stress [m^2/s^2] (or 'default' or 'none')
                                PC_VW:
                                    type: string
                                    default: default
                                    description: Hub mean vw Reynolds stress [m^2/s^2] (or 'default' or 'none')
                                SCMod1:
                                    type: string
                                    default: default
                                    description: u-component coherence model ('GENERAL', 'IEC', 'API', 'NONE', or 'default')
                                SCMod2:
                                    type: string
                                    default: default
                                    description: v-component coherence model ('GENERAL', 'IEC', 'NONE', or 'default')
                                SCMod3:
                                    type: string
                                    default: default
                                    description: w-component coherence model ('GENERAL', 'IEC', 'NONE', or 'default')
                                InCDec1:
                                    type: string
                                    default: default
                                    description: u-component coherence parameters for general or IEC models [-, m^-1] (e.g. '10.0  0.3e-3' in quotes) (or 'default')
                                InCDec2:
                                    type: string
                                    default: default
                                    description: v-component coherence parameters for general or IEC models [-, m^-1] (e.g. '10.0  0.3e-3' in quotes) (or 'default')
                                InCDec3:
                                    type: string
                                    default: default
                                    description: w-component coherence parameters for general or IEC models [-, m^-1] (e.g. '10.0  0.3e-3' in quotes) (or 'default')
                                CohExp:
                                    type: string
                                    default: default
                                    description: Coherence exponent for general model [-] (or 'default')
                                CTEventPath:
                                    type: string
                                    default: unused
                                    description: Name of the path where event data files are located
                                CTEventFile:
                                    type: string
                                    enum: ['LES','DNS','RANDOM']
                                    default: RANDOM
                                    description: Type of event files
                                Randomize:
                                    type: boolean
                                    default: True
                                    description: Randomize the disturbance scale and locations? (true/false)
                                DistScl:
                                    type: number
                                    default: 1.
                                    minimum: 0
                                    maximum: 1.
                                    description: Disturbance scale [-] (ratio of event dataset height to rotor disk). (Ignored when Randomize = true.)
                                CTLy:
                                    type: number
                                    default: 0.5
                                    minimum: 0
                                    maximum: 1.
                                    description: Fractional location of tower centerline from right [-] (looking downwind) to left side of the dataset. (Ignored when Randomize = true.)
                                CTLz:
                                    type: number
                                    default: 0.5
                                    minimum: 0
                                    maximum: 1.
                                    description: Fractional location of hub height from the bottom of the dataset. [-] (Ignored when Randomize = true.)
                                CTStartTime:
                                    type: number
                                    default: 30
                                    minimum: 0
                                    maximum: 1.e+3
                                    unit: s
                                    description: Minimum start time for coherent structures in RootName.cts
            fix_wind_seeds:
                type: boolean
                default: True
                description: Fix the seed of the random integer generator controlling the seed of TurbSim. When set to False, the seeds change everytime the DLC generator class is called. It is recommended to keep it to True when the optimization is on, or different wind seeds will be generated for every function call, complicating the smoothness of the solution space. Even when set to True, the wind seeds are different across wind speeds and DLCs.
            fix_wave_seeds:
                type: boolean
                default: True
                description: Fix the seed of the random integer generator controlling the wave seed of HydroDyn. When set to False, the seeds change everytime the DLC generator class is called. It is recommended to keep it to True when the optimization is on, or different wave seeds will be generated for every function call, complicating the smoothness of the solution space. Even when set to True, the wave seeds are different across wind speeds and DLCs.
            metocean_conditions:
                type: object
                default: {}
                description: Here the metocean conditions can be specified in terms of wind speeds, significant wave height (Hs), and wave period (Tp) for normal sea state (NSS), fatigue calculations, and severe sea state (SSS). Currently WEIS neglects the joint probability density function crossing wind/wave directionality, wave peak shape parameter gamma
                properties:
                    wind_speed:
                        type: array
                        description: Array of wind speeds to tabulate Hs and Tp
                        default: [4., 6., 8., 10., 12., 14., 16., 18., 20., 22., 24.]
                        items:
                            type: number
                            unit: m/s
                            minItems: 1
                            minimum: 0.0
                            maximum: 50.0
                            uniqueItems: true
                    current_speed:
                        type: array
                        description: Array of current speeds to tabulate Hs and Tp for MHK turbines
                        default: [0.5 , 0.85, 1.2 , 1.55, 1.9 , 2.25, 2.6 , 2.95, 3.3 , 3.65, 4.  ]
                        items:
                            type: number
                            unit: m/s
                            minItems: 1
                            minimum: 0.0
                            maximum: 50.0
                            uniqueItems: true
                    current_std:
                        type: array
                        description: Default standard deviation of water current speed versus current_speed for MHK. 
                        default: []
                        items:
                            type: number
                            unit: m/s
                            minItems: 1
                            minimum: 0.0
                            maximum: 100.0
                    wave_height_NSS:
                        type: array
                        description: Array of Hs for NSS conditional to wind speed
                        default: [1.10, 1.18, 1.32, 1.54, 1.84, 2.19, 2.60, 3.06, 3.62, 4.03, 4.52]
                        items:
                            type: number
                            unit: m
                            minItems: 1
                            minimum: 0.0
                            maximum: 100.0
                            uniqueItems: false
                    wave_period_NSS:
                        type: array
                        description: Array of Tp for NSS conditional to wind speed
                        default: [8.52, 8.31, 8.01, 7.65, 7.44, 7.46, 7.64, 8.05, 8.52, 8.99, 9.45]
                        items:
                            type: number
                            unit: s
                            minItems: 1
                            minimum: 0.0
                            maximum: 1000.0
                            uniqueItems: false
                    current_NSS:
                        type: array
                        description: Array of currents for NSS conditional to wind speed
                        default: [0.10, 0.12, 0.14, 0.16, 0.18, 0.20, 0.22, 0.24, 0.26, 0.28, 0.30]
                        items:
                            type: number
                            unit: m/s
                            minItems: 1
                            minimum: 0.0
                            maximum: 100.0
                            uniqueItems: false
                    current_fatigue:
                        type: array
                        description: Array of currents for fatigue conditional to wind speed
                        default: [0.10, 0.12, 0.14, 0.16, 0.18, 0.20, 0.22, 0.24, 0.26, 0.28, 0.30]
                        items:
                            type: number
                            unit: m/s
                            minItems: 1
                            minimum: 0.0
                            maximum: 100.0
                            uniqueItems: false
                    current_SSS:
                        type: array
                        description: Array of currnents for SSS conditional to wind speed
                        default: [0.20, 0.24, 0.28, 0.32, 0.36, 0.40, 0.44, 0.48, 0.52, 0.56, 0.60]
                        items:
                            type: number
                            unit: m/s
                            minItems: 1
                            minimum: 0.0
                            maximum: 100.0
                            uniqueItems: false
                    wave_height_fatigue:
                        type: array
                        description: Array of Hs for fatigue computations conditional to wind speed
                        default: [1.10, 1.18, 1.32, 1.54, 1.84, 2.19, 2.60, 3.06, 3.62, 4.03, 4.52]
                        items:
                            type: number
                            unit: m
                            minItems: 1
                            minimum: 0.0
                            maximum: 100.0
                            uniqueItems: false
                    wave_period_fatigue:
                        type: array
                        description: Array of Tp for fatigue computations conditional to wind speed
                        default: [8.52, 8.31, 8.01, 7.65, 7.44, 7.46, 7.64, 8.05, 8.52, 8.99, 9.45]
                        items:
                            type: number
                            unit: s
                            minItems: 1
                            minimum: 0.0
                            maximum: 1000.0
                            uniqueItems: false
                    wave_height_SSS:
                        type: array
                        description: Array of Hs for SSS conditional to wind speed
                        default: [1.10, 1.18, 1.32, 1.54, 1.84, 2.19, 2.60, 3.06, 3.62, 4.03, 4.52]
                        items:
                            type: number
                            unit: m
                            minItems: 1
                            minimum: 0.0
                            maximum: 100.0
                            uniqueItems: false
                    wave_period_SSS:
                        type: array
                        description: Array of Tp for SSS conditional to wind speed
                        default: [8.52, 8.31, 8.01, 7.65, 7.44, 7.46, 7.64, 8.05, 8.52, 8.99, 9.45]
                        items:
                            type: number
                            unit: s
                            minItems: 1
                            minimum: 0.0
                            maximum: 1000.0
                            uniqueItems: false
                    wave_height50:
                            type: number
                            description: Wave height with 50-year occurrence, used in DLC 6.1
                            default: 15.
                            unit: m
                            minimum: 0.0
                            maximum: 100.0
                    current_1:
                            type: number
                            description: Current with 1-year occurrence, used in DLC 6.3
                            default: 0.75
                            unit: m/s
                            minimum: 0.0
                            maximum: 100.0
                    current_50:
                            type: number
                            description: Current with 50-year occurrence, used in DLC 6.1
                            default: 1.3
                            unit: m/s
                            minimum: 0.0
                            maximum: 100.0
                    wave_period50:
                            type: number
                            description: Wave period with 50-year occurrence, used in DLC 6.1
                            default: 15.
                            unit: s
                            minimum: 0.0
                            maximum: 1000.0
                    wave_height1:
                            type: number
                            description: Wave height with 1-year occurrence, used in DLC 6.3, 7.1, and 8.2
                            default: 15.
                            unit: m
                            minimum: 0.0
                            maximum: 100.0
                    wave_period1:
                            type: number
                            description: Wave period with 1-year occurrence, used in DLC 6.3, 7.1, and 8.2
                            default: 15.
                            unit: s
                            minimum: 0.0
                            maximum: 1000.0
                    user_distribution:
                            type: object
                            description: User probability mass distribution
                            default: {}
                            properties:
                                speed:
                                    type: array
                                    description: Flow speeds (m/s)
                                    items:
                                        type: number
                                probability:
                                    type: array
                                    description: Probability mass distirbution
                                    items:
                                        type: number

            openfast_input_map:
                type: object
                default: {}
                description: Users can add to the openfast_input_map of the DLC driver here, with key value pairs
                
    ROSCO:
        type: object
        default: {}
        description: Options for WEIS fidelity level 3 = nonlinear time domain. Inherited from ROSCO/rosco/toolbox/inputs/toolbox_shema.yaml
        properties: 
            tuning_yaml:
                type: string
                description: yaml file to tune the ROSCO controller, only used for control-only optimizations using an OpenFAST model.  Absolute path or relative to modeling input.
                default: none

    OL2CL:
        type: object
        default: {}
        decription: Options for WEIS open loop to closed loop control optimization
        properties:
            flag:
                type: boolean
                default: False
                description: Whether or not to run open loop to closed loop optimization
            trajectory_dir:
                type: string
                default: unused
                description: Directory where open loop control trajectories are located
            save_error:
                type: boolean
                default: True
                description: Save error timeseries?
    
    OWENS:
        type: object
        default: {}
        properties:
            flag:
                type: boolean
                default: False
            general:
                type: object
                default: {}
                properties:
                    run_path:
                        type: string
                        default: nothing
                        desciption: Points to the data folders
                    analysisType:
                        type: string
                        default: unsteady # unsteady, steady, modal
                    AeroModel:
                        type: string
                        default: DMS
                        description: Aero model, "AC" actuator cylinder (slower but slightly more accurate with array capability at the planar aero only level) "DMS" (faster and nearly as accurate) or "AD" (aerodyn interface, specifically OLAF, which is a relatively slow but higher fidelity vortex line wake model.  This includes strut drag and tip losses.)
                    structuralModel:
                        type: string
                        default: GX
                        description: TNB time newmark beta time stepping linear or nonlinear, ROM reduced order modal linear or nonlinear, GX geometrically exact beam theory 
                    controlStrategy:
                        type: string
                        default: constantRPM
                        description: currently constant RPM (in work is to expose the scripting options of the discon and custom control options at the super simple file level)
                    platformActive:
                        type: boolean
                        default: false
                        description: Flag to indicate if the floating platform model is active.
                    topsideOn:
                        type: boolean
                        default: true
                        desciption: Flag to be able to turn off the rotor and just run the floating portions
                    InterpOrder:
                        type: integer
                        default: 2
                        description: if platformActive, order used for extrapolating inputs and states, 0 flat, 1 linear, 2 quadratic
                    defaultOutputFilename:
                        type: string
                        default: nothing
                        desciption: Data output filename with path, set to nothing or don't specify to not output anything
                    rigid:
                        type: boolean
                        default: false
                        description: This bypasses the structural solve and just mapps the applied loads as the reaction loads, and the deflections remain 0
                    TOL: 
                        type: number
                        default: 1e-4
                        desciption: Gauss-seidel iteration tolerance - i.e. the two-way iteration tolerance
                    MAXITER:
                        type: integer
                        default: 300
                        desciption: Gauss-seidel max iterations - i.e. the two-way iterations
                    verbosity:
                        type: integer
                        default: 2
                        description: Verbosity where 0 is nothing, 1 is warnings, 2 is summary outputs, 3 is detailed outputs, and 4 is everything
                    VTKsaveName:
                        type: string
                        default: ./vtk/windio
                        desciption: Path and name of the VTK outputs, recommended to put it in its own folder (which it will automatically create if needed). It will be overwritten if write_intermediate_design is true.
                    aeroLoadsOn:
                        type: integer
                        default: 2
                        description: Level of aero coupling 0 structures only, 1 no deformation passed to the aero, 2 two-way coupling, 1.5 last time step's deformations passed to this timesteps aero and no internal iteration
                    delta_t:
                        type: number
                        default: 0.01
                        description: Time step, in seconds
                    write_intermediate_design:
                        type: boolean
                        default: false
                        description: Write intermediate design point vtks to the output folder
                    # turbineType:
                    #     type: string
                    #     default: Darrieus #Darrieus, H-VAWT, ARCUS
            
            DLC:
                type: object
                default: {}
                properties:
                    DLCs:
                        type: array
                        default: ["none"]
                        description: name of DLC 
                    IEC_std:
                        type: string
                        default: 1-ED3
                        description: turbsim input file IEC standard
                    WindChar:
                        type: string
                        default: A
                        description: turbsim wind charasteric
                    WindClass:
                        type: integer
                        default: 1
                        description: DLC turbsim wind class
                    turbsimsavepath:
                        type: string
                        default: ./turbsimfiles
                        description: path where the turbsim files are saved
                    pathtoturbsim:
                        type: string
                        default: nothing
                        description: path to the turbsim executable
                    NumGrid_Z:
                        type: integer
                        default: 8
                        description: turbsim vertical discretizations
                    NumGrid_Y:
                        type: integer
                        default: 6
                        description: turbsim horizontal discretizations
                    grid_oversize:
                        type: number
                        default: 0.1
                        description: amount that the turbsim inflow is oversized compared to the turbine to allow for deflection
                    regenWindFiles:
                        type: boolean
                        default: false
                        desciption: force regeneration of turbsim files even if they already exist
                    delta_t_turbsim:
                        type: number
                        default: 0.05
                        description: turbsim timestep
                    simtime_turbsim:
                        type: number
                        default: 0.0
                        description: turbsim total time, which loops if simtime exceeds turbsim time
                    RandSeed1:
                        type: integer
                        default: 40071
                        description: turbsim random seed number
            AeroOptions:
                type: object
                default: {}
                properties:
                    Nslices:
                        type: integer
                        default: 1
                        descrption: Number of 3-D slices for the strip method to go from 2D to 3D considering curved deforming blades
                    ntheta:
                        type: integer
                        default: 1
                        description: Number of azimuthal discretizations of the simplified aero model, if active, must by wholly divisible by NBlades
                    ifw:
                        type: boolean
                        default: false
                        description: Use the inflow wind coupling to get inflow velocities 
                    DynamicStallModel:
                        type: string
                        default: "BV"
                        description: Dynamic stall model, should be under an OWENSAero options
                    RPI:
                        type: boolean
                        default: true
                        description: rotating point iterative method (i.e. it just calculates at the blade positions and is much faster)
                    Aero_Buoyancy_Active:
                        type: boolean
                        default: false
                        description: flag to turn buoyancy on for the blades. This is likely to be replaced by a different model
                    Aero_AddedMass_Active:
                        type: boolean
                        default: false
                        description: flag to turn added mass forces on, don't turn on if the added mass in the structures are on
                    Aero_RotAccel_Active:
                        type: boolean
                        default: false
                        desciption: Flag to turn added mass forces on, don't turn on if the added mass in the structures are on
            FEAOptions:
                    nlOn:
                        type: boolean
                        default: true
                        desciption: Nonlinear effects
                    RayleighAlpha:
                        type: number
                        default: 0.05
                        desciption: damping coefficient scalar on the stiffness matrix
                    RayleighBeta:
                        type: number
                        default: 0.05
                        description: damping coefficient scalar on the mass matrix
                    iterationType:
                        type: string
                        default: DI
                        description: internal iteration type DI direct iteration, NR newton rhapson (which is less stable than DI)
                    guessFreq:
                        type: number
                        default: 0.0
                        description: for the built in flutter model frequency guessed for the flutter frequency
                    numModes:
                        type: integer
                        default: 20
                        desciption: ROM model, number of modes used in the analysis type. Less is faster but less accurate
                    adaptiveLoadSteppingFlag:
                        type: boolean
                        default: true
                        desciption: For steady analysis if convergence fails, it will reduce the load and retry then increase the load
                    minLoadStepDelta:
                        type: number
                        default: 0.05
                        description: minimum change in load step
                    minLoadStep:
                        type: number
                        default: 0.05
                        desciption: minimum value of reduced load
                    prescribedLoadStep:
                        type: number
                        default: 0.0
                        description: optional prescribed load fraction
                    maxNumLoadSteps: 
                        type: interger
                        default: 20
                        desciption: used in static (steady state) analysis, max load steps for adaptive load stepping
                    tolerance: 
                        type: number
                        defaul: 1.0000e-06
                        desciption: total mesh unsteady analysis convergence tolerance for a timestep within the structural model
                    maxIterations: 
                        type: integer
                        default: 50
                        desciption: total mesh unsteady analysis convergence max iterations for a timestep
                    elementOrder: 
                        type: integer
                        default: 1
                        desciption: Element order, 1st order, 2nd order etc; determines the number of nodes per element (order +1). Orders above 1 have not been tested in a long time
                    alpha: 
                        type: number
                        default: 0.5
                        desciption: newmark time integration alpha parameter
                    gamma: 
                        type: number
                        default: 0.5
                        decription: newmark time integration gamma parameter
                    AddedMass_Coeff_Ca: 
                        type: number
                        default: 0.0
                        desciption: added mass coefficient, scaling factor (typically 0-1) on the cones of water mass applied to each structural element in the 22 and 33 diagonal terms. 0 turns this off
                    platformTurbineConnectionNodeNumber: 
                        type: integer
                        default: 1
                    aeroElasticOn: 
                        type: boolean
                        default: false
                        description: OWENSFEA for the built in flutter model
                    spinUpOn: 
                        type: boolean
                        default: true
                        desciption: OWENSFEA modal analysis, calculates steady centrifugal strain stiffening and then passes that model to the modal analysis
                    predef: 
                        type: boolean
                        default: false
                        desciption: Predeformation flag for two state analysis where a portion of the blade is deformed and the nonlinear strain stiffening terms are "update"-d, then "use"-d in two different analysis
            Mesh_Options:
                type: object
                default: {}
                optional:
                    - c_mount_ratio
                    - cables_connected_to_blade_base
                properties:
                    ntelem: 
                        type: integer
                        default: 20
                        description: number of tower elements in each blade, plus nodes wherever there is a component overlap
                    nbelem: 
                        type: integer
                        default: 30
                        desciption: number of blade elements in each blade, plus nodes wherever there is a component overlap
                    ncelem: 
                        type: integer
                        default: 30
                        desciption: number of cable elements in each cable if ARCUS
                    nselem: 
                        type: integer
                        default: 10
                        description: number of elements in each strut
                    angularOffset: 
                        type: number
                        default: 0.0
                        decription: moves the structure to align with the aero model
                    joint_type: 
                        type: integer 
                        default: 0
                        desciption: optionally can specify the strut to blade joints to be pinned about different axes, or 0 for welded
                    c_mount_ratio: 
                        type: number 
                        default: 0.05
                        description: for ARCUS, where the cable mounts on the lower side of the blade
                    AD15hubR: 
                        type: number
                        default: 0.1
                        description: parameter, used in aerodyn coupling for the hub radius so that the vortex sheets don't go within the hub
                    cables_connected_to_blade_base: 
                        type: boolean 
                        default: true
                        desciption: for ARCUS, for the two part simulation of the blade bending
                    turbineType: 
                        type: string
                        default: Darrieus"
                        desciption: mesh Darrieus, H-VAWT, controls if the tips of the blades are joined to the tower in the mesh or not. 
            OWENSOpenFASTWrappers:
                type: object
                default: {}
                properties:
                    windINPfilename: 
                        type: string
                        default: nothing
                        decription: If ifw or AeroDyn is being used, gets overwritten if using the DLC analysis type, the moordyn file location, like in the unit test
                    ifw_libfile: 
                        type: string
                        default: nothing
                        desciption: location of the respective OpenFAST library, if nothing it will use the internal OWENS installation
                    hd_lib: 
                        type: string
                        default: nothing
                        description: location of the respective OpenFAST library, if nothing it will use the internal OWENS installation
                    md_lib: 
                        type: string
                        default: nothing
                        desciption: location of the respective OpenFAST library, if nothing it will use the internal OWENS installation
                    adi_lib: 
                        type: string
                        default: nothing
                        desciption: location of the respective OpenFAST library, if nothing it will use the internal OWENS installation
                    adi_rootname: 
                        type: string
                        default: /aerodyn
                        desciption: location of the respective OpenFAST library, if nothing it will use the internal OWENS installation
                    hd_input_file: 
                        type: string
                        default: none
                        decription: If platformActive, the hydrodyn file location, like in the unit test
                    ss_input_file: 
                        type: string
                        default: none
                        desciption: If platformActive, the sea state file location, like in the unit test
                    md_input_file: 
                        type: string
                        default: none
                        decription: If platformActive, the moordyn file location, like in the unit test
                    potflowfile: 
                        type: string
                        default: nothing
                        desciption: If platformActive, the potential flow files location, like in the unit test
                    WindType: 
                        type: integer
                        default: 3
                        decription: Derived parameter, inflowwind wind file type when DLC generator is active, matches inflowwind WindType 
            HydroDyn: 
                type: object
                default: {}
                properties:
                    Echo: *echo
                    PotMod:
                        type: integer
                        enum: [0, 1, 2]
                        default: 0
                        description: Potential-flow model {0 = none=no potential flow, 1 = frequency-to-time-domain transforms based on Capytaine/NEMOH/WAMIT output, 2 = fluid-impulse theory (FIT)} (switch)
                    ExctnMod:
                        type: integer
                        enum: [0, 1, 2]
                        default: 0
                        description: Wave Excitation model {0 = None, 1 = DFT, 2 = state-space} (switch) [only used when PotMod=1; STATE-SPACE REQUIRES *.ssexctn INPUT FILE]
                    ExctnDisp:
                        type: integer
                        enum: [0, 1, 2]
                        default: 0
                        description: 'Method of computing Wave Excitation {0: use undisplaced position, 1: use displaced position, 2: use low-pass filtered displaced position) [only used when PotMod=1 and ExctnMod>0 and SeaStates WaveMod>0]} (switch)'
                    ExctnCutOff:
                        type: number
                        minimum: 0.0
                        maximum: 1e3
                        default: 10.0
                        unit: Hz
                        description: Cutoff (corner) frequency of the low-pass time-filtered displaced position (Hz) [>0.0] [used only when PotMod=1, ExctnMod>0, and ExctnDisp=2]) [only used when PotMod=1 and ExctnMod>0 and SeaState's WaveMod>0]} (switch)
                    PtfmYMod:
                        type: integer
                        enum: [0, 1]
                        default: 0
                        description: 'Model for large platform yaw offset {0: Static reference yaw offset based on PtfmRefY, 1: dynamic reference yaw offset based on low-pass filtering the PRP yaw motion with cutoff frequency PtfmYCutOff} (switch)'
                    PtfmRefY:
                        type: number
                        default: 0.0
                        description: Constant (if PtfmYMod=0) or initial (if PtfmYMod=1) platform reference yaw offset (deg)
                    PtfmYCutOff:
                        type: number
                        minimum: 0.0
                        maximum: 1e3
                        default: 0.01
                        unit: Hz
                        description: Cutoff frequency for the low-pass filtering of PRP yaw motion when PtfmYMod=1 [unused when PtfmYMod=0] (Hz)
                    NExctnHdg:
                        type: integer
                        default: 36
                        minimum: 1
                        maximum: 360
                        description: Number of evenly distributed platform yaw/heading angles over the range of [-180, 180) deg for which the wave excitation shall be computed [only used when PtfmYMod=1] (-)
                    RdtnMod:
                        type: integer
                        enum: [0, 1, 2]
                        default: 0
                        description: Radiation memory-effect model {0 = no memory-effect calculation, 1 = convolution, 2 = state-space} (switch) [only used when PotMod=1; STATE-SPACE REQUIRES *.ss INPUT FILE]
                    RdtnTMax:
                        type: number
                        minimum: 0.0
                        maximum: 1e3
                        default: 60.0
                        unit: s
                        description: Analysis time for wave radiation kernel calculations (sec) [only used when PotMod=1; determines RdtnDOmega=Pi/RdtnTMax in the cosine transform; MAKE SURE THIS IS LONG ENOUGH FOR THE RADIATION IMPULSE RESPONSE FUNCTIONS TO DECAY TO NEAR-ZERO FOR THE GIVEN PLATFORM!]
                    RdtnDT:
                        type: number
                        minimum: 0.0
                        maximum: 1e3
                        default: 0.0125
                        unit: s
                        description: Time step for wave radiation kernel calculations, use 0.0 for default (sec) [only used when PotMod=1; DT<=RdtnDT<=0.1 recommended; determines RdtnOmegaMax=Pi/RdtnDT in the cosine transform]
                    NBody:
                        type: integer
                        default: 1
                        minimum: 1
                        maximum: 100
                        description: Number of WAMIT bodies to be used (-) [>=1; only used when PotMod=1. If NBodyMod=1, the WAMIT data contains a vector of size 6*NBody x 1 and matrices of size 6*NBody x 6*NBody; if NBodyMod>1, there are NBody sets of WAMIT data each with a vector of size 6 x 1 and matrices of size 6 x 6]
                    NBodyMod:
                        type: integer
                        enum: [1, 2, 3]
                        default: 1
                        description: 'Body coupling model {1: include coupling terms between each body and NBody in HydroDyn equals NBODY in WAMIT, 2: neglect coupling terms between each body and NBODY=1 with XBODY=0 in WAMIT, 3: Neglect coupling terms between each body and NBODY=1 with XBODY=/0 in WAMIT} (switch) [only used when PotMod=1]'
                    PotFile:
                        type: string
                        default: 'unused'
                        description: Will be automatically filled in with HAMS output unless a value here overrides it; WAMIT output files containing the linear, nondimensionalized, hydrostatic restoring matrix (.hst), frequency-dependent hydrodynamic added mass matrix and damping matrix (.1), and frequency- and direction-dependent wave excitation force vector per unit wave amplitude (.3) (quoted string) [MAKE SURE THE FREQUENCIES INHERENT IN THESE WAMIT FILES SPAN THE PHYSICALLY-SIGNIFICANT RANGE OF FREQUENCIES FOR THE GIVEN PLATFORM; THEY MUST CONTAIN THE ZERO- AND INFINITE-FREQUENCY LIMITS]
                    WAMITULEN:
                        type: array
                        default: [1.0]
                        unit: m
                        items:
                            type: number
                            minItems: 1
                        description: Characteristic body length scale used to redimensionalize WAMIT output (meters) [1 to NBody if NBodyMod>1] [only used when PotMod=1]
                    PtfmRefxt:
                        type: array
                        default: [0.0]
                        unit: m
                        items:
                            type: number
                            minItems: 1
                        description: The xt offset of the body reference point(s) from (0,0,0) (meters) [1 to NBody] [only used when PotMod=1]
                    PtfmRefyt:
                        type: array
                        default: [0.0]
                        unit: m
                        items:
                            type: number
                            minItems: 1
                        description: The yt offset of the body reference point(s) from (0,0,0) (meters) [1 to NBody] [only used when PotMod=1]
                    PtfmRefzt:
                        type: array
                        default: [0.0]
                        unit: m
                        items:
                            type: number
                            minItems: 1
                        description: The zt offset of the body reference point(s) from (0,0,0) (meters) [1 to NBody] [only used when PotMod=1. If NBodyMod=2,PtfmRefzt=0.0]
                    PtfmRefztRot:
                        type: array
                        default: [0.0]
                        unit: m
                        items:
                            type: number
                            minItems: 1
                        description: The rotation about zt of the body reference frame(s) from xt/yt (degrees) [1 to NBody] [only used when PotMod=1]
                    PtfmVol0:
                        type: array
                        default: [0.0]
                        units: m^3
                        items:
                            type: number
                            minItems: 1
                        description: Displaced volume of water when the body is in its undisplaced position (m^3) [1 to NBody] [only used when PotMod=1; USE THE SAME VALUE COMPUTED BY WAMIT AS OUTPUT IN THE .OUT FILE!]
                    PtfmCOBxt:
                        type: array
                        default: [0.0]
                        unit: m
                        items:
                            type: number
                            minItems: 1
                        description: The xt offset of the center of buoyancy (COB) from the platform reference point (meters) [only used when PotMod=1]
                    PtfmCOByt:
                        type: array
                        default: [0.0]
                        unit: m
                        items:
                            type: number
                            minItems: 1
                        description: The yt offset of the center of buoyancy (COB) from the platform reference point (meters) [only used when PotMod=1]
                    MnDrift:
                        type: integer
                        enum: [0, 7, 8, 9, 10, 11, 12]
                        default: 0
                        description: Mean-drift 2nd-order forces computed {0 = None; [7, 8, 9, 10, 11, or 12] = WAMIT file to use} [Only one of MnDrift, NewmanApp, or DiffQTF can be non-zero]
                    NewmanApp:
                        type: integer
                        enum: [0, 7, 8, 9, 10, 11, 12]
                        default: 0
                        description: Mean- and slow-drift 2nd-order forces computed with Newman's approximation {0 = None; [7, 8, 9, 10, 11, or 12] = WAMIT file to use} [Only one of MnDrift, NewmanApp, or DiffQTF can be non-zero. Used only when WaveDirMod=0]
                    DiffQTF:
                        type: integer
                        enum: [0, 10, 11, 12]
                        default: 0
                        description: Full difference-frequency 2nd-order forces computed with full QTF {0 = None; [10, 11, or 12] = WAMIT file to use} [Only one of MnDrift, NewmanApp, or DiffQTF can be non-zero]
                    SumQTF:
                        type: integer
                        enum: [0, 10, 11, 12]
                        default: 0
                        description: Full summation -frequency 2nd-order forces computed with full QTF {0 = None; [10, 11, or 12] = WAMIT file to use}
                    AddF0:
                        type: array
                        default: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
                        description: Additional preload (N, N-m)
                        items:
                            type: number
                            minItems: 6
                            maxItems: 6
                    AddCLin1: &addclin
                        type: array
                        default: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
                        description: Additional linear stiffness by row (N/m, N/rad, N-m/m, N-m/rad)
                        items:
                            type: number
                            minItems: 6
                            maxItems: 6
                    AddCLin2: *addclin
                    AddCLin3: *addclin
                    AddCLin4: *addclin
                    AddCLin5: *addclin
                    AddCLin6: *addclin
                    AddBLin1: &addblin
                        type: array
                        default: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
                        description: Additional linear damping by row (N/(m/s), N/(rad/s), N-m/(m/s), N-m/(rad/s))
                        items:
                            type: number
                            minItems: 6
                            maxItems: 6
                    AddBLin2: *addblin
                    AddBLin3: *addblin
                    AddBLin4: *addblin
                    AddBLin5: *addblin
                    AddBLin6: *addblin
                    AddBQuad1: &addbquad
                        type: array
                        default: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
                        description: Additional quadratic drag by row (N/(m/s)^2, N/(rad/s)^2, N-m(m/s)^2, N-m/(rad/s)^2)
                        items:
                            type: number
                            minItems: 6
                            maxItems: 6
                    AddBQuad2: *addbquad
                    AddBQuad3: *addbquad
                    AddBQuad4: *addbquad
                    AddBQuad5: *addbquad
                    AddBQuad6: *addbquad
                    WaveDisp:
                        type: integer
                        enum: [0, 1]
                        default: 0
                        description: 'Method of computing Wave Kinematics {0: use undisplaced position, 1: use displaced position) } (switch)'
                    AMMod:
                        type: integer
                        enum: [0, 2]
                        default: 0
                        description: 'Method of computing distributed added-mass force. (0: Only and always on nodes below SWL at the undisplaced position. 2: Up to the instantaneous free surface) [overwrite to 0 when WaveMod = 0 or 6 or when WaveStMod = 0 in SeaState]'
                    NMOutputs:
                        type: integer
                        minimum: 0
                        maximum: 9
                        default: 0
                        description: Number of member outputs (-) [must be < 10]
                    NJOutputs:
                        type: integer
                        minimum: 0
                        maximum: 9
                        default: 0
                        description: Number of joint outputs [Must be < 10]
                    JOutLst:
                        type: array
                        default: [0]
                        description: List of JointIDs which are to be output (-)[unused if NJOutputs=0]
                        items:
                            type: integer
                            maxItems: 9
                    HDSum:
                        type: boolean
                        default: True
                        description: Output a summary file [flag]
                    OutAll:
                        type: boolean
                        default: False
                        description: Output all user-specified member and joint loads (only at each member end, not interior locations) [flag]
                    OutSwtch:
                        type: integer
                        enum: [1, 2, 3]
                        default: 2
                        description: Output requested channels to [1=Hydrodyn.out, 2=GlueCode.out, 3=both files]
                    OutFmt:
                        type: string
                        default: 'ES11.4e2'
                        description: Output format for numerical results (quoted string) [not checked for validity]
                    OutSFmt:
                        type: string
                        default: 'A11'
                        description: Output format for header strings (quoted string) [not checked for validity]
                    SimplCd: &simpl
                        type: number
                        minimum: 0.0
                        maximum: 100.0
                        default: 1.0
                        description: Simple strip theory model coefficient, default of 1.0
                    SimplCa: *simpl
                    SimplCp: *simpl
                    SimplCb: *simpl
                    SimplCdMG: *simpl
                    SimplCaMG: *simpl
                    SimplCpMG: *simpl
                    SimplCbMG: *simpl
                    SimplAxCd: &simpl_0
                        type: number
                        minimum: 0.0
                        maximum: 100.0
                        default: 0.0
                        description: Simple strip theory model coefficient, default of 0.0
                    SimplAxCa: *simpl
                    SimplAxCp: *simpl
                    SimplAxCdMG: *simpl_0
                    SimplAxCaMG: *simpl
                    SimplAxCpMG: *simpl
            MoorDyn: 
                type: object
                default: {}
                properties:
                    Echo: *echo
                    dtM:
                        type: number
                        unit: s
                        default: 0.001
                        minimum: 0.0
                        maximum: 100.0
                        description: Time step to use in mooring integration (s)
                    kbot:
                        type: number
                        unit: kg/(m^2*s^2)
                        default: 3.e+6
                        minimum: 0.0
                        maximum: 1.e+9
                        description: Bottom stiffness (Pa/m)
                    cbot:
                        type: number
                        unit: kg/(m^2*s)
                        default: 3.e+5
                        minimum: 0.0
                        maximum: 1.e+9
                        description: Bottom damping (Pa/m)
                    dtIC:
                        type: number
                        unit: s
                        default: 1.0
                        minimum: 0.0
                        maximum: 100.0
                        description: Time interval for analyzing convergence during IC gen (s)
                    TmaxIC:
                        type: number
                        unit: s
                        default: 60.0
                        minimum: 0.0
                        maximum: 1000.0
                        description: Max time for ic gen (s)
                    CdScaleIC:
                        type: number
                        unit: none
                        default: 4.0
                        minimum: 0.0
                        maximum: 1000.0
                        description: Factor by which to scale drag coefficients during dynamic relaxation (-)
                    threshIC:
                        type: number
                        unit: none
                        default: 1e-3
                        minimum: 0.0
                        maximum: 1.0
                        description: Threshold for IC convergence (-)
            SeaState: &ofseastate
                type: object
                default: {}
                description: SeaState modelling options in OpenFAST
                properties:
                    Echo:
                        type: boolean
                        default: False
                        description: Echo the input file data (flag)
                    WtrDens:
                        type: number
                        default: 1025.0
                        minimum: 0.0
                        maximum: 1e4
                        unit: kg/m^3
                        description: Water density (kg/m^3)
                    WtrDpth:
                        type: number
                        default: 200.0
                        minimum: 0.0
                        maximum: 1e5
                        unit: m
                        description: Water depth (meters)
                    MSL2SWL:
                        type: number
                        default: 0.0
                        minimum: 0.0
                        maximum: 1e5
                        unit: m
                        description: Offset between still-water level and mean sea level (meters) [positive upward; unused when WaveMod = 6; must be zero if PotMod=1 or 2]
                    X_HalfWidth:
                        type: number
                        default: 5.0
                        minimum: 0.0
                        maximum: 1e5
                        unit: m
                        description: 'Half-width of the domain in the X direction (m) [>0, NOTE: X[nX] = nX*dX, where nX = {-NX+1,-NX+2,…,NX-1} and dX = X_HalfWidth/(NX-1)]'
                    Y_HalfWidth:
                        type: number
                        default: 5.0
                        minimum: 0.0
                        maximum: 1e5
                        unit: m
                        description: 'Half-width of the domain in the Y direction (m) [>0, NOTE: Y[nY] = nY*dY, where nY = {-NY+1,-NY+2,…,NY-1} and dY = Y_HalfWidth/(NY-1)]'
                    Z_Depth:
                        type: string
                        default: default
                        unit: m
                        description: Depth of the domain the Z direction (m) relative to SWL [0 < Z_Depth <= WtrDpth+MSL2SWL;
                    NX:
                        type: integer
                        default: 2
                        minimum: 2
                        maximum: 200
                        description: Number of nodes in half of the X-direction domain (-) [>=2]
                    NY:
                        type: integer
                        default: 2
                        minimum: 2
                        maximum: 200
                        description: Number of nodes in half of the Y-direction domain (-) [>=2]
                    NZ:
                        type: integer
                        default: 15
                        minimum: 2
                        maximum: 200
                        description: Number of nodes in the Z direction (-) [>=2]
                    WaveMod:
                        type: integer
                        enum: [0, 1, 2, 3, 4, 5, 6]
                        default: 2
                        description: Incident wave kinematics model {0- none/still water, 1- regular (periodic), 1P#- regular with user-specified phase, 2- JONSWAP/Pierson-Moskowitz spectrum (irregular), 3- White noise spectrum (irregular), 4- user-defined spectrum from routine UserWaveSpctrm (irregular), 5- Externally generated wave-elevation time series, 6- Externally generated full wave-kinematics time series [option 6 is invalid for PotMod/=0]} (switch)
                    WaveStMod:
                        type: integer
                        enum: [0, 1, 2, 3]
                        default: 0
                        description: Model for stretching incident wave kinematics to instantaneous free surface {0 = none=no stretching, 1 = vertical stretching, 2 = extrapolation stretching, 3 = Wheeler stretching} (switch) [unused when WaveMod=0 or when PotMod/=0]
                    WaveTMax:
                        type: number
                        default: 3600
                        minimum: 0.0
                        maximum: 1e5
                        unit: s
                        description: Analysis time for incident wave calculations (sec) [unused when WaveMod=0; determines WaveDOmega=2Pi/WaveTMax in the IFFT]
                    WaveDT:
                        type: number
                        default: 0.25
                        minimum: 0.0
                        maximum: 10.0
                        unit: s
                        description: Time step for incident wave calculations     (sec) [unused when WaveMod=0; 0.1<=WaveDT<=1.0 recommended; determines WaveOmegaMax=Pi/WaveDT in the IFFT]
                    WaveHs:
                        type: number
                        default: 1.1
                        minimum: 0.0
                        maximum: 1e5
                        unit: m
                        description: Significant wave height of incident waves (meters) [used only when WaveMod=1 or 2].  These inputs will be determined by the DLC_Driver options (wave_height).
                    WaveTp:
                        type: number
                        default: 8.52
                        minimum: 0.0
                        maximum: 1e5
                        unit: s
                        description: Peak spectral period of incident waves (sec) [used only when WaveMod=1 or 2].  These inputs will be determined by the DLC_Driver options (wave_period).
                    WavePkShp:
                        type: number
                        default: 1.0
                        minimum: 1
                        maximum: 7
                        unit: none
                        description: Peak-shape parameter of incident wave spectrum (-) or DEFAULT (string) [used only when WaveMod=2; use 1.0 for Pierson-Moskowitz]. These inputs will be determined by the DLC_Driver options (wave_gamma).
                    WvLowCOff:
                        type: number
                        default: 0.111527
                        minimum: 0.0
                        maximum: 1e3
                        unit: rad/s
                        description: Low cut-off frequency or lower frequency limit of the wave spectrum beyond which the wave spectrum is zeroed (rad/s) [unused when WaveMod=0, 1, or 6]
                    WvHiCOff:
                        type: number
                        default: 1.256637  # 5 sec.
                        minimum: 0.0
                        maximum: 1e3
                        unit: rad/s
                        description: High cut-off frequency or upper frequency limit of the wave spectrum beyond which the wave spectrum is zeroed (rad/s) [unused when WaveMod=0, 1, or 6]
                    WaveDir: # TODO: Move to Environment section
                        type: number
                        default: 0.0
                        minimum: 0.0
                        maximum: 6.283185307179586
                        unit: rad
                        description: Incident wave propagation heading direction [unused when WaveMod=0 or 6]. These inputs will be determined by the DLC_Driver options (wave_direction).
                    WaveDirMod:
                        type: integer
                        enum: [0, 1]
                        default: 0
                        description: Directional spreading function {0 = none, 1 = COS2S} [only used when WaveMod=2,3, or 4]
                    WaveDirSpread:
                        type: number
                        default: 1.0
                        minimum: 0.0
                        maximum: 1e4
                        unit: none
                        description: Wave direction spreading coefficient ( > 0 ) [only used when WaveMod=2,3, or 4 and WaveDirMod=1]
                    WaveNDir:
                        type: integer
                        enum: [1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49]
                        default: 1
                        description: Number of wave directions [only used when WaveMod=2,3, or 4 and WaveDirMod=1; odd number only]
                    WaveDirRange:
                        type: number
                        unit: deg
                        default: 90
                        minimum: 0.0
                        maximum: 360
                        description: Range of wave directions (full range = WaveDir +/- 1/2*WaveDirRange) (degrees) [only used when WaveMod=2,3,or 4 and WaveDirMod=1]
                    WaveSeed1:
                        type: integer
                        minimum: -2147483648
                        maximum: 2147483647
                        default: -561580799
                        description: First random seed of incident waves [-2147483648 to 2147483647] [unused when WaveMod=0, 5, or 6]. These inputs will be determined by the DLC_Driver options (wave_seed).
                    WaveSeed2:
                        default: RANLUX
                        description: Second random seed of incident waves [-2147483648 to 2147483647] [unused when WaveMod=0, 5, or 6]. Use RANLUX for internal FAST pseudo-random number generator
                    WaveNDAmp:
                        type: boolean
                        default: True
                        description: Flag for normally distributed amplitudes [only used when WaveMod=2, 3, or 4]
                    WvKinFile:
                        type: string
                        default: ''
                        description: Root name of externally generated wave data file(s) (quoted string) [used only when WaveMod=5 or 6]
                    WvDiffQTF:
                        type: boolean
                        default: False
                        description: Full difference-frequency 2nd-order wave kinematics (flag)
                    WvSumQTF:
                        type: boolean
                        default: False
                        description: Full summation-frequency  2nd-order wave kinematics (flag)
                    WvLowCOffD:
                        type: number
                        minimum: 0.0
                        maximum: 1e4
                        default: 0.0
                        unit: rad/s
                        description: Low frequency cutoff used in the difference-frequencies (rad/s) [Only used with a difference-frequency method]
                    WvHiCOffD:
                        type: number
                        minimum: 0.0
                        maximum: 1e4
                        default: 0.737863
                        unit: rad/s
                        description: High frequency cutoff used in the difference-frequencies (rad/s) [Only used with a difference-frequency method]
                    WvLowCOffS:
                        type: number
                        minimum: 0.0
                        maximum: 1e4
                        default: 0.314159
                        unit: rad/s
                        description: Low frequency cutoff used in the summation-frequencies  (rad/s) [Only used with a summation-frequency method]
                    WvHiCOffS:
                        type: number
                        minimum: 0.0
                        maximum: 1.e+4
                        default: 3.2
                        unit: rad/s
                        description: High frequency cutoff used in the summation-frequencies  (rad/s) [Only used with a summation-frequency method]
                    ConstWaveMod:
                        type: integer
                        enum: [0, 1, 2]
                        default: 0
                        description: 'Constrained wave model: 0=none; 1=Constrained wave with specified crest elevation, alpha; 2=Constrained wave with guaranteed peak-to-trough crest height, HCrest (flag)'
                    CrestHmax:
                        type: number
                        default: 1.0
                        minimum: 0.0
                        maximum: 1e5
                        unit: m
                        description: Crest height (2*alpha for ConstWaveMod=1 or HCrest for ConstWaveMod=2), must be larger than WaveHs (m) [unused when ConstWaveMod=0]
                    CrestTime:
                        type: number
                        default: 60.0
                        minimum: 0.0
                        maximum: 1e5
                        unit: s
                        description: Time at which the crest appears (s) [unused when ConstWaveMod=0]
                    CrestXi:
                        type: number
                        default: 0.0
                        description: X-position of the crest (m) [unused when ConstWaveMod=0]
                    CrestYi:
                        type: number
                        default: 0.0
                        description: Y-position of the crest (m) [unused when ConstWaveMod=0]
                    CurrMod:
                        type: integer
                        enum: [0, 1, 2]
                        default: 0
                        description: Current profile model {0 = none=no current, 1 = standard, 2 = user-defined from routine UserCurrent} (switch)
                    CurrSSV0:
                        type: number
                        minimum: 0.0
                        maximum: 100.0
                        default: 0.0
                        unit: m/s
                        description: Sub-surface current velocity at still water level  (m/s) [used only when CurrMod=1]
                    CurrSSDir:
                        type: number
                        default: 0
                        maximum: 6.283185307179586
                        unit: rad
                        description: Sub-surface current heading direction (radians) or 0.0 for default [used only when CurrMod=1]
                    CurrNSRef:
                        type: number
                        minimum: 0.0
                        maximum: 1e4
                        default: 20.0
                        unit: m
                        description: Near-surface current reference depth (meters) [used only when CurrMod=1]
                    CurrNSV0:
                        type: number
                        minimum: 0.0
                        maximum: 100.0
                        default: 0.0
                        unit: m/s
                        description: Near-surface current velocity at still water level (m/s) [used only when CurrMod=1]
                    CurrNSDir:
                        type: number
                        default: 0.0
                        minimum: 0.0
                        maximum: 6.283185307179586
                        unit: rad
                        description: Near-surface current heading direction (degrees) [used only when CurrMod=1]
                    CurrDIV:
                        type: number
                        minimum: 0.0
                        maximum: 100.0
                        default: 0.0
                        unit: m/s
                        description: Depth-independent current velocity (m/s) [used only when CurrMod=1]
                    CurrDIDir:
                        type: number
                        default: 0.0
                        minimum: 0.0
                        maximum: 6.283185307179586
                        unit: rad
                        description: Depth-independent current heading direction (radians) [used only when CurrMod=1]
                    MCFD:
                        type: number
                        default: 0
                        minimum: 0.0
                        maximum: 1e5
                        unit: m
                        description: MacCamy-Fuchs member radius (ignored if radius <= 0) [must be 0 when WaveMod 0 or 6]
                    SeaStSum:
                        type: boolean
                        default: False
                        description: Output a summary file [flag]
                    OutSwtch:
                        type: integer
                        enum: [1, 2, 3]
                        default: 2
                        description: 'Output requested channels to: [1=SeaState.out, 2=GlueCode.out, 3=both files]'
                    OutFmt:
                        type: string
                        default: 'ES11.4e2'
                        description: Output format for numerical results (quoted string) [not checked for validity!]
                    OutSFmt:
                        type: string
                        default: 'A11'
                        description: Output format for header strings (quoted string) [not checked for validity!]
                    NWaveElev:
                        type: integer
                        default: 1
                        minimum: 0
                        maximum: 9
                        description: Number of points where the incident wave elevations can be computed (-) [maximum of 9 output locations]
                    WaveElevxi:
                        type: array
                        default: ['0.0']
                        description: List of xi-coordinates for points where the incident wave elevations can be output (meters) [NWaveElev points, separated by commas or white space; usused if NWaveElev = 0]
                        items:
                            type: string
                            # default: 0.0
                            # unit: m
                            maxItems: 9
                    WaveElevyi:
                        type: array
                        default: ['0.0']
                        description: List of yi-coordinates for points where the incident wave elevations can be output (meters) [NWaveElev points, separated by commas or white space; usused if NWaveElev = 0]
                        items:
                            type: string
                            # default: 0.0
                            # unit: m
                            maxItems: 9
                    NWaveKin:
                        type: integer
                        default: 0
                        minimum: 0
                        maximum: 9
                        description: Number of points where the wave kinematics can be output (-) [maximum of 9 output locations]
                    WaveKinxi:
                        type: array
                        default: ['0.0']
                        description: List of xi-coordinates for points where the wave kinematics can be output (meters) [NWaveKin points, separated by commas or white space; usused if NWaveKin = 0]
                        items:
                            type: string
                            # default: 0.0
                            # unit: m
                            maxItems: 9
                    WaveKinyi:
                        type: array
                        default: ['0.0']
                        description: List of yi-coordinates for points where the wave kinematics can be output (meters) [NWaveKin points, separated by commas or white space; usused if NWaveKin = 0]
                        items:
                            type: string
                            # default: 0.0
                            # unit: m
                            maxItems: 9
                    WaveKinzi:
                        type: array
                        default: ['0.0']
                        description: List of zi-coordinates for points where the wave kinematics can be output (meters) [NWaveKin points, separated by commas or white space; usused if NWaveKin = 0]
                        items:
                            type: string
                            # default: 0.0
                            # unit: m
                            maxItems: 9
